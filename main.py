# DISCORD_TOKEN -
from livePls import keep_alive
import discord

from discord.ext import commands

TOKEN = "MTIzNDI2Mjc2NTQ4MTM2MTUxMQ.GizlYk.Vf5pyKJQYBDf3Q1stL8w5xYVAKwJpsnKlJRoTY"
CHANNEL_ID = 1215359935333007370
SOURCE_CHANEL_ID = 1234263458158215179

intents = discord.Intents.default()
intents.message_content = True

client = commands.Bot(command_prefix='/', intents=intents)

keep_alive()


async def delete_other_webhooks(channel_id):
  channel = client.get_channel(channel_id)
  if not channel:
    print("–ö–∞–Ω–∞–ª –Ω–µ –Ω–∞–π–¥–µ–Ω.")
    return

  webhooks = await channel.webhooks()

  for webhook in webhooks[:-1]:
    await webhook.delete()
    print(f"–í–µ–±—Ö—É–∫ {webhook.name} —É—Å–ø–µ—à–Ω–æ —É–¥–∞–ª–µ–Ω.")


async def create_buttons(ctx):
  if ctx.channel.id != SOURCE_CHANEL_ID:
    return

  await ctx.send("–í–≤–µ–¥–∏—Ç–µ –Ω–∏–∫ –ø—Ä–æ–≤–µ—Ä—è–µ–º–æ–≥–æ:")
  nickname = await client.wait_for('message',
                                   check=lambda m: m.author == ctx.author)

  await ctx.send("–í–≤–µ–¥–∏—Ç–µ —Ç–µ–≥ –ø—Ä–æ–≤–µ—Ä—è–µ–º–æ–≥–æ:")
  player_tag = await client.wait_for('message',
                                     check=lambda m: m.author == ctx.author)

  await ctx.send("–í–≤–µ–¥–∏—Ç–µ –ø—Ä–µ–≤–µ–¥—É—â–µ–π —Ç–∏—Ä:")
  old_tire = await client.wait_for('message',
                                   check=lambda m: m.author == ctx.author)

  await ctx.send("–í–≤–µ–¥–∏—Ç–µ –ø–æ–ª—É—á–µ–Ω—ã–π —Ç–∏—Ä:")
  new_tire = await client.wait_for('message',
                                   check=lambda m: m.author == ctx.author)

  await create_webhook(ctx.author.mention, nickname.content,
                       player_tag.content, ctx.author.id, CHANNEL_ID,
                       old_tire.content, new_tire.content)


@client.command()
async def thelp(ctx):
  await ctx.send(
      "Message 1: /test\nMessage 2: User Name(H248x example)\nMessage 3: User Tag(\\@TAG_HERE example)\nMessage 4: Old Tire(ht5 example)\nMessage 5: Getted tire(lt1 example)"
  )


@client.command()
async def test(ctx):
  await delete_other_webhooks(CHANNEL_ID)
  await create_buttons(ctx)


async def create_webhook(tester, player_nickname, player_tag, user_id,
                         channel_id, old_tire, new_tire):
  channel = client.get_channel(channel_id)
  if not channel:
    print("–ö–∞–Ω–∞–ª –Ω–µ –Ω–∞–π–¥–µ–Ω.")
    return

  webhook = await channel.create_webhook(name="Tier")
  print(f"–í–µ–±—Ö—É–∫ Tier —É—Å–ø–µ—à–Ω–æ —Å–æ–∑–¥–∞–Ω –≤ –∫–∞–Ω–∞–ª–µ {channel.name}.")

  embed = discord.Embed(description=f"**–¢–µ—Å—Ç–µ—Ä:**\n"
                        f"<@{user_id}>\n"
                        f"**–¢–µ–≥:**\n{player_tag}\n"
                        f"**–ü—Ä–æ—à–ª—ã–π —Ç–∏—Ä:**\n{str(old_tire).upper()}\n"
                        f"**–ü–æ–ª—É—á–µ–Ω–Ω—ã–π —Ç–∏—Ä:**\n{str(new_tire).upper()}",
                        color=16711680)

  embed.set_author(name=f"–†–µ–∑—É–ª—å—Ç–∞—Ç—ã —Ç–µ—Å—Ç–∞ {player_nickname} üèÜ")

  await webhook.send(content=f"{player_tag}", embed=embed)


@client.event
async def on_ready():
  print(f'–ë–æ—Ç {client.user} —É—Å–ø–µ—à–Ω–æ –ø–æ–¥–∫–ª—é—á–µ–Ω.')


client.run(TOKEN)
